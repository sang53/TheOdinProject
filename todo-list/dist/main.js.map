{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/style.css","webpack://todo-list/./node_modules/css-loader/dist/runtime/api.js","webpack://todo-list/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/compat get default export","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/nonce","webpack://todo-list/./src/style.css?7163","webpack://todo-list/./src/JSONConverter.js","webpack://todo-list/./src/storageInterface.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US.js","webpack://todo-list/./node_modules/date-fns/_lib/defaultOptions.js","webpack://todo-list/./node_modules/date-fns/constants.js","webpack://todo-list/./node_modules/date-fns/constructFrom.js","webpack://todo-list/./node_modules/date-fns/toDate.js","webpack://todo-list/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://todo-list/./node_modules/date-fns/_lib/normalizeDates.js","webpack://todo-list/./node_modules/date-fns/compareAsc.js","webpack://todo-list/./node_modules/date-fns/isLastDayOfMonth.js","webpack://todo-list/./node_modules/date-fns/endOfDay.js","webpack://todo-list/./node_modules/date-fns/endOfMonth.js","webpack://todo-list/./node_modules/date-fns/differenceInMonths.js","webpack://todo-list/./node_modules/date-fns/differenceInCalendarMonths.js","webpack://todo-list/./node_modules/date-fns/differenceInSeconds.js","webpack://todo-list/./node_modules/date-fns/differenceInMilliseconds.js","webpack://todo-list/./node_modules/date-fns/_lib/getRoundingMethod.js","webpack://todo-list/./node_modules/date-fns/startOfDay.js","webpack://todo-list/./node_modules/date-fns/getDayOfYear.js","webpack://todo-list/./node_modules/date-fns/differenceInCalendarDays.js","webpack://todo-list/./node_modules/date-fns/startOfYear.js","webpack://todo-list/./node_modules/date-fns/startOfWeek.js","webpack://todo-list/./node_modules/date-fns/startOfISOWeek.js","webpack://todo-list/./node_modules/date-fns/getISOWeekYear.js","webpack://todo-list/./node_modules/date-fns/getISOWeek.js","webpack://todo-list/./node_modules/date-fns/startOfISOWeekYear.js","webpack://todo-list/./node_modules/date-fns/getWeekYear.js","webpack://todo-list/./node_modules/date-fns/getWeek.js","webpack://todo-list/./node_modules/date-fns/startOfWeekYear.js","webpack://todo-list/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://todo-list/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://todo-list/./node_modules/date-fns/_lib/format/formatters.js","webpack://todo-list/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://todo-list/./node_modules/date-fns/_lib/protectedTokens.js","webpack://todo-list/./node_modules/date-fns/isValid.js","webpack://todo-list/./node_modules/date-fns/isDate.js","webpack://todo-list/./node_modules/date-fns/format.js","webpack://todo-list/./src/DOMInterface.js","webpack://todo-list/./src/DateConverter.js","webpack://todo-list/./node_modules/date-fns/formatDistance.js","webpack://todo-list/./src/projectObj.js","webpack://todo-list/./src/taskObj.js","webpack://todo-list/./node_modules/date-fns/nextDay.js","webpack://todo-list/./node_modules/date-fns/getDay.js","webpack://todo-list/./node_modules/date-fns/addDays.js","webpack://todo-list/./node_modules/date-fns/nextMonday.js","webpack://todo-list/./src/defaultProjects.js","webpack://todo-list/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*,\n::before,\n::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n}\n\nbody {\n  line-height: 1.15;\n  -webkit-font-smoothing: antialiased;\n  font-family: system-ui, \"Segoe UI\", Roboto, Arial;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\nsvg {\n  vertical-align: baseline;\n}\n\ninput,\nbutton,\ntextarea,\nselect,\noptgroup {\n  font: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\np {\n  text-wrap: pretty;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  text-wrap: balance;\n}\n\n:root {\n  --sidebar-bg-color: #cffafe;\n\n  --main-bg-color: white;\n}\n\n.flex {\n  display: flex;\n}\n\n.grid {\n  display: grid;\n}\n\n.hidden {\n  display: none;\n}\n\n#page {\n  display: flex;\n  background-color: var(--main-bg-color);\n  min-height: 100vh;\n}\n\n#sidebar {\n  background-color: var(--sidebar-bg-color);\n}\n\n#profile {\n  margin: 3rem auto;\n  width: fit-content;\n\n  > #profile-name {\n    font-weight: 700;\n    font-size: 1.25rem;\n  }\n}\n\n#sidebar-projects {\n  flex-direction: column;\n  gap: 1rem;\n  padding: 2rem;\n\n  > #sidebar-projects-top {\n    justify-content: space-around;\n    align-items: center;\n    gap: 3ch;\n  }\n\n  > .sidebar-project {\n    justify-content: space-between;\n    gap: 2rem;\n  }\n}\n\n#main {\n  position: relative;\n  padding: 5rem;\n  min-width: 40%;\n\n  #main-date {\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n    text-decoration-line: underline;\n    text-underline-offset: 5px;\n  }\n}\n\n.main-cell {\n  margin-bottom: 5rem;\n\n  .main-deadline {\n    margin-bottom: 3rem;\n  }\n\n  > input {\n    margin-right: 0.5rem;\n    margin-top: 0.5rem;\n  }\n}\n\n.main-project {\n  flex-direction: column;\n  gap: 0.75rem;\n\n  .project-top {\n    gap: 1rem;\n  }\n}\n\n.project-task {\n  gap: 2rem;\n}\n\ndialog {\n  margin: auto;\n}\n\n::backdrop {\n  background-color: grey;\n  opacity: 0.5;\n}\n\ninput:last-child {\n  content: \"Add Task\";\n}\n\nbutton {\n  background-color: #e0e7ff;\n  border-radius: 10px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;EAGE,sBAAsB;AACxB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,mCAAmC;EACnC,iDAAiD;AACnD;;AAEA;;;;;EAKE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;;;;;EAKE,aAAa;EACb,eAAe;EACf,iBAAiB;AACnB;;AAEA;;;;;;;EAOE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;;;;;EAME,kBAAkB;AACpB;;AAEA;EACE,2BAA2B;;EAE3B,sBAAsB;AACxB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,iBAAiB;AACnB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;;EAElB;IACE,gBAAgB;IAChB,kBAAkB;EACpB;AACF;;AAEA;EACE,sBAAsB;EACtB,SAAS;EACT,aAAa;;EAEb;IACE,6BAA6B;IAC7B,mBAAmB;IACnB,QAAQ;EACV;;EAEA;IACE,8BAA8B;IAC9B,SAAS;EACX;AACF;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,cAAc;;EAEd;IACE,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,+BAA+B;IAC/B,0BAA0B;EAC5B;AACF;;AAEA;EACE,mBAAmB;;EAEnB;IACE,mBAAmB;EACrB;;EAEA;IACE,oBAAoB;IACpB,kBAAkB;EACpB;AACF;;AAEA;EACE,sBAAsB;EACtB,YAAY;;EAEZ;IACE,SAAS;EACX;AACF;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB\",\"sourcesContent\":[\"*,\\n::before,\\n::after {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  margin: 0;\\n}\\n\\nbody {\\n  line-height: 1.15;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: system-ui, \\\"Segoe UI\\\", Roboto, Arial;\\n}\\n\\nimg,\\npicture,\\nvideo,\\ncanvas,\\nsvg {\\n  display: block;\\n  max-width: 100%;\\n}\\n\\nsvg {\\n  vertical-align: baseline;\\n}\\n\\ninput,\\nbutton,\\ntextarea,\\nselect,\\noptgroup {\\n  font: inherit;\\n  font-size: 100%;\\n  line-height: 1.15;\\n}\\n\\np,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  overflow-wrap: break-word;\\n}\\n\\np {\\n  text-wrap: pretty;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  text-wrap: balance;\\n}\\n\\n:root {\\n  --sidebar-bg-color: #cffafe;\\n\\n  --main-bg-color: white;\\n}\\n\\n.flex {\\n  display: flex;\\n}\\n\\n.grid {\\n  display: grid;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n#page {\\n  display: flex;\\n  background-color: var(--main-bg-color);\\n  min-height: 100vh;\\n}\\n\\n#sidebar {\\n  background-color: var(--sidebar-bg-color);\\n}\\n\\n#profile {\\n  margin: 3rem auto;\\n  width: fit-content;\\n\\n  > #profile-name {\\n    font-weight: 700;\\n    font-size: 1.25rem;\\n  }\\n}\\n\\n#sidebar-projects {\\n  flex-direction: column;\\n  gap: 1rem;\\n  padding: 2rem;\\n\\n  > #sidebar-projects-top {\\n    justify-content: space-around;\\n    align-items: center;\\n    gap: 3ch;\\n  }\\n\\n  > .sidebar-project {\\n    justify-content: space-between;\\n    gap: 2rem;\\n  }\\n}\\n\\n#main {\\n  position: relative;\\n  padding: 5rem;\\n  min-width: 40%;\\n\\n  #main-date {\\n    position: absolute;\\n    top: 2rem;\\n    right: 2rem;\\n    text-decoration-line: underline;\\n    text-underline-offset: 5px;\\n  }\\n}\\n\\n.main-cell {\\n  margin-bottom: 5rem;\\n\\n  .main-deadline {\\n    margin-bottom: 3rem;\\n  }\\n\\n  > input {\\n    margin-right: 0.5rem;\\n    margin-top: 0.5rem;\\n  }\\n}\\n\\n.main-project {\\n  flex-direction: column;\\n  gap: 0.75rem;\\n\\n  .project-top {\\n    gap: 1rem;\\n  }\\n}\\n\\n.project-task {\\n  gap: 2rem;\\n}\\n\\ndialog {\\n  margin: auto;\\n}\\n\\n::backdrop {\\n  background-color: grey;\\n  opacity: 0.5;\\n}\\n\\ninput:last-child {\\n  content: \\\"Add Task\\\";\\n}\\n\\nbutton {\\n  background-color: #e0e7ff;\\n  border-radius: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export function jsonify(project) {\n  return JSON.stringify(project, replacer);\n}\n\nexport function unjsonify(projectString) {\n  return JSON.parse(projectString, reviver);\n}\n\nfunction replacer(key, data) {\n  if (key === \"tasks\") return Array.from(data.entries());\n  else return data;\n}\n\nfunction reviver(key, data) {\n  switch (key) {\n    case \"tasks\":\n      return new Map(data);\n    case \"deadline\":\n      return new Date(data);\n    default:\n      return data;\n  }\n}\n","import { jsonify, unjsonify } from \"./JSONConverter\";\n\nexport function getProjects() {\n  let projectNameArray = unjsonify(localStorage.getItem(\"projects\"));\n  if (!projectNameArray)\n    return false; // if no projects have been saved\n  else {\n    return projectNameArray.map((projectName) => getProjectInfo(projectName)); // return array of all saved Project objects\n  }\n}\n\nfunction getProjectInfo(projectName) {\n  return unjsonify(localStorage.getItem(projectName));\n}\n\nexport function saveProjects(projects) {\n  let projectNames = projects.map((project) => project.name);\n  localStorage.setItem(\"projects\", jsonify(projectNames));\n}\n\nexport function saveProjectInfo(project) {\n  localStorage.setItem(project.name, jsonify(project));\n}\n\nexport function removeProjectFromStorage(project) {\n  localStorage.removeItem(project.name);\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import {\n  convertTimeToString,\n  convertDate,\n  getInputMinDate,\n} from \"./DateConverter\";\n\nconst SIDEBAR = document.querySelector(\"#sidebar-projects\");\nconst MAIN = document.querySelector(\"#main\");\nconst NEWTASKBUTTON = document.querySelector(\".task-add\");\n\nexport function addProjectToPage(project) {\n  const projectDeadline = convertTimeToString(project.deadline);\n  project.mainDiv = addProjectToMain(project, projectDeadline);\n  project.sidebarDiv = addProjectToSidebar(project.name, projectDeadline);\n}\n\nfunction addProjectToSidebar(projectName, projectDeadline) {\n  const project = document.querySelector(\".sidebar-project\").cloneNode(true);\n  project.querySelector(\".sidebar-project-title\").innerText = projectName;\n  project.querySelector(\".sidebar-project-time\").innerText = projectDeadline;\n  project.classList.toggle(\"hidden\");\n  SIDEBAR.appendChild(project);\n  return project;\n}\n\nfunction addProjectToMain(project, projectDeadline) {\n  const projectDiv = document.querySelector(\".main-cell\").cloneNode(true);\n  projectDiv.querySelector(\".main-deadline\").innerText = projectDeadline;\n  projectDiv.querySelector(\".project-title\").innerText = project.name;\n  projectDiv.querySelector(\".project-description\").innerText =\n    `-- ${project.description}`;\n  projectDiv.querySelector(\".project-remove\").id = project.name;\n\n  for (let taskObj of project.tasks.values()) {\n    taskObj.taskDiv = addTaskToProject(\n      taskObj,\n      projectDiv.querySelector(\".main-project\"),\n    );\n  }\n\n  projectDiv.classList.toggle(\"hidden\");\n  MAIN.appendChild(projectDiv);\n  return projectDiv;\n}\n\nexport function addTaskToProject(taskObj, projectDiv) {\n  const taskDiv = projectDiv.querySelector(\".project-task\").cloneNode(true);\n\n  taskDiv.querySelector(\".task-name\").textContent = taskObj.name;\n  taskDiv.classList.toggle(\"hidden\");\n\n  const checkbox = taskDiv.querySelector(\"input.task-checkbox\");\n  checkbox.id = \"c-\" + taskObj.name;\n  if (taskObj.complete) checkbox.checked = true;\n\n  taskDiv\n    .querySelector(\"label.task-label\")\n    .setAttribute(\"for\", \"c-\" + taskObj.name);\n\n  taskDiv.querySelector(\".task-remove\").id = taskObj.name;\n  projectDiv.appendChild(taskDiv);\n  return taskDiv;\n}\n\nexport function setMainDate() {\n  document.querySelector(\"#main-date\").textContent = convertDate(new Date());\n}\n\nexport function removeProjectFromPage(project) {\n  project.mainDiv.remove();\n  project.sidebarDiv.remove();\n}\n\nexport function getParentProjectName(taskElement) {\n  let node = taskElement.parentNode;\n  while (node.className !== \"main-cell\") {\n    node = node.parentNode;\n  }\n  return node.querySelector(\".project-remove\").id;\n}\n\nexport function removeTaskFromPage(task) {\n  task.taskDiv.remove();\n}\n\nexport function toggleRemoveDefaults() {\n  document.querySelector(\".remove-defaults\").classList.toggle(\"hidden\");\n}\n\nexport function setInputMinDate() {\n  const inputDate = document.querySelector(\"#input-date\");\n  const todayDate = getInputMinDate();\n  inputDate.min = todayDate;\n  inputDate.value = todayDate;\n}\n\nexport function addNewTaskInput() {\n  const newTaskInput = document.querySelector(\".input-task\").cloneNode();\n  newTaskInput.value = \"\";\n  NEWTASKBUTTON.before(newTaskInput);\n}\n","import { formatDistance, format, compareAsc } from \"date-fns\";\n\nconst DATEFORMAT = \"dd/MM/yyyy\";\n\nexport function convertTimeToString(dateobj) {\n  return formatDistance(new Date(), dateobj);\n}\n\nexport function convertDate(date) {\n  return format(date, DATEFORMAT);\n}\n\nexport function getInputMinDate() {\n  return format(new Date(), \"yyyy-MM-dd\");\n}\n\nexport function sortAscDate(projects) {\n  projects.sort((project1, project2) =>\n    compareAsc(project1.deadline, project2.deadline),\n  );\n}\n\nexport function getDateObj(dateString, timeString) {\n  const dateObj = new Date(dateString);\n  const [hour, min] = timeString.split(\":\").map((element) => parseInt(element));\n  dateObj.setHours(hour, min);\n  return dateObj;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","export default class {\n  constructor(name, description, deadline, tasks = new Map()) {\n    this.name = name;\n    this.description = description;\n    this.deadline = deadline;\n    this.tasks = tasks;\n  }\n\n  static addTask(task) {\n    this.tasks.set(task.name, task);\n  }\n\n  static removeTask(taskName) {\n    const task = this.tasks.get(taskName);\n    this.tasks.delete(taskName);\n    return task;\n  }\n}\n","export default class {\n  constructor(name, complete = false) {\n    this.name = name;\n    this.complete = complete;\n  }\n\n  static toggleComplete() {\n    this.complete = !this.complete;\n  }\n}\n","import { addDays } from \"./addDays.js\";\nimport { getDay } from \"./getDay.js\";\n\n/**\n * The {@link nextDay} function options.\n */\n\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to check\n * @param day - Day of the week\n * @param options - An object with options\n *\n * @returns The date is the next day of the week\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\nexport function nextDay(date, day, options) {\n  let delta = day - getDay(date, options);\n  if (delta <= 0) delta += 7;\n\n  return addDays(date, delta, options);\n}\n\n// Fallback for modularized imports:\nexport default nextDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDay} function options.\n */\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date, options) {\n  return toDate(date, options?.in).getDay();\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { nextDay } from \"./nextDay.js\";\n\n/**\n * The {@link nextMonday} function options.\n */\n\n/**\n * @name nextMonday\n * @category Weekday Helpers\n * @summary When is the next Monday?\n *\n * @description\n * When is the next Monday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, returned from the context function if passed, or inferred from the arguments.\n *\n * @param date - The date to start counting from\n * @param options - An object with options\n *\n * @returns The next Monday\n *\n * @example\n * // When is the next Monday after Mar, 22, 2020?\n * const result = nextMonday(new Date(2020, 2, 22))\n * //=> Mon Mar 23 2020 00:00:00\n */\nexport function nextMonday(date, options) {\n  return nextDay(date, 1, options);\n}\n\n// Fallback for modularized imports:\nexport default nextMonday;\n","import Project from \"./projectObj.js\";\nimport Task from \"./taskObj.js\";\nimport { nextMonday } from \"date-fns\";\n\nconst ENDOFTODAY = new Date();\nENDOFTODAY.setHours(23, 59, 59);\n\nconst NEXTMONDAY = nextMonday(new Date());\n\nconst tasks1 = [\n  new Task(\"Walk the dog\", true),\n  new Task(\"Feed the dog\", false),\n  new Task(\"Shower the dog\", false),\n];\n\nconst tasks2 = [\n  new Task(\"Wash the dishes\", false),\n  new Task(\"Clean the room\", true),\n  new Task(\"Make the bed\", true),\n  new Task(\"Water the plant\", false),\n];\n\nconst taskMap1 = new Map();\ntasks1.forEach((task) => taskMap1.set(task.name, task));\n\nconst taskMap2 = new Map();\ntasks2.forEach((task) => taskMap2.set(task.name, task));\n\nexport default [\n  new Project(\n    \"Take care of the dog\",\n    \"Make sure the dog is chilling\",\n    ENDOFTODAY,\n    taskMap1,\n  ),\n  new Project(\n    \"Do the chores\",\n    \"Let's do all the chores!\",\n    NEXTMONDAY,\n    taskMap2,\n  ),\n];\n","import \"./style.css\";\n\nimport {\n  getProjects,\n  saveProjects,\n  removeProjectFromStorage,\n  saveProjectInfo,\n} from \"./storageInterface.js\";\nimport {\n  addProjectToPage,\n  setMainDate,\n  removeProjectFromPage,\n  getParentProjectName,\n  removeTaskFromPage,\n  toggleRemoveDefaults,\n  setInputMinDate,\n  addNewTaskInput,\n  addTaskToProject,\n} from \"./DOMInterface.js\";\nimport defaultProjects from \"./defaultProjects.js\";\nimport Project from \"./projectObj.js\";\nimport Task from \"./taskObj.js\";\nimport { sortAscDate, getDateObj } from \"./DateConverter.js\";\n\nlet projects;\nconst DIALOG = document.querySelector(\"dialog\");\nconst FORM = DIALOG.querySelector(\"form\");\n\ninitialise();\n\nfunction initialise() {\n  if (loadProjectstoArray()) toggleRemoveDefaults();\n  projects.forEach(addProjectToPage);\n  setMainDate();\n  setInputMinDate();\n}\n\n// returns true if default projects are loaded\nfunction loadProjectstoArray() {\n  projects = getProjects();\n  if (!projects) {\n    projects = defaultProjects.slice();\n    return true;\n  }\n}\n\ndocument.addEventListener(\"click\", clickHandler);\n\nfunction clickHandler(event) {\n  switch (event.target.className) {\n    case \"remove-defaults\":\n      defaultProjects.forEach(removeProject);\n      toggleRemoveDefaults();\n      break;\n    case \"project-add\":\n      DIALOG.showModal();\n      break;\n    case \"project-remove\":\n      removeProject(getProjectByName(event.target.id));\n      break;\n    case \"task-remove\":\n      removeTask(...getTaskObjByElement(event.target));\n      break;\n    case \"task-add\":\n      addNewTaskInput();\n      event.preventDefault();\n      break;\n    case \"task-checkbox\":\n      toggleTaskComplete(\n        ...getTaskObjByElement(event.target, event.target.id.slice(2)),\n      );\n      break;\n    case \"dialog-add\":\n      newProject();\n      FORM.reset();\n      setInputMinDate();\n      DIALOG.close();\n      break;\n    case \"dialog-cancel\":\n      FORM.reset();\n      DIALOG.close();\n      break;\n    case \"new-task-button\":\n      newTask(\n        getProjectByName(getParentProjectName(event.target)),\n        event.target.previousElementSibling.value,\n      );\n      event.target.previousElementSibling.value = \"\";\n      break;\n  }\n}\n\nfunction removeProject(project) {\n  removeProjectFromPage(project);\n  removeProjectFromArray(project);\n  removeProjectFromStorage(project);\n  saveProjects(projects);\n}\n\nfunction getTaskObjByElement(taskElement, taskName = null) {\n  const project = getProjectByName(getParentProjectName(taskElement));\n  if (taskName) return [project, project.tasks.get(taskName)];\n  else return [project, project.tasks.get(taskElement.id)];\n}\n\nfunction removeTask(project, taskObj) {\n  removeTaskFromPage(taskObj);\n  removeTaskFromProject(project, taskObj);\n  saveProjectInfo(project);\n}\n\nfunction removeTaskFromProject(project, taskObj) {\n  project.tasks.delete(taskObj.name);\n}\n\nfunction getProjectByName(projectName) {\n  return projects.find((project) => project.name === projectName);\n}\n\nfunction removeProjectFromArray(project) {\n  projects.splice(\n    projects.findIndex((element) => element === project),\n    1,\n  );\n}\n\nfunction newProject() {\n  const project = new Project(\n    FORM.querySelector(\"#input-name\").value,\n    FORM.querySelector(\"#input-description\").value,\n    getDateObj(\n      FORM.querySelector(\"#input-date\").value,\n      FORM.querySelector(\"#input-time\").value,\n    ),\n  );\n  FORM.querySelectorAll(\".input-task\").forEach(function (element) {\n    if (element.value)\n      project.tasks.set(element.value, new Task(element.value));\n  });\n  updateProjects(project);\n}\n\nfunction updateProjects(project) {\n  projects.forEach(removeProjectFromPage);\n  projects.push(project);\n  sortAscDate(projects);\n  projects.forEach(addProjectToPage);\n  saveProjects(projects);\n  saveProjectInfo(project);\n}\n\nfunction toggleTaskComplete(project, taskObj) {\n  taskObj.complete = !taskObj.complete;\n  saveProjectInfo(project);\n}\n\nfunction newTask(project, taskName) {\n  if (taskName) {\n    const task = new Task(taskName);\n    task.taskDiv = addTaskToProject(\n      task,\n      project.mainDiv.querySelector(\".main-project\"),\n    );\n    project.tasks.set(taskName, task);\n    saveProjectInfo(project);\n  }\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","jsonify","project","replacer","unjsonify","projectString","parse","reviver","Array","from","entries","Map","Date","saveProjects","projects","projectNames","name","localStorage","setItem","saveProjectInfo","locals","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","isArray","array","test","findIndex","object","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","minutesInMonth","constructFromSymbol","Symbol","for","constructFrom","constructor","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","normalizeDates","dates","normalize","bind","find","compareAsc","dateLeft","dateRight","diff","isLastDayOfMonth","in","setHours","endOfDay","setFullYear","endOfMonth","differenceInMonths","laterDate","earlierDate","laterDate_","workingLaterDate","earlierDate_","sign","difference","abs","differenceInCalendarMonths","setDate","setMonth","isLastMonthNotFull","differenceInSeconds","differenceInMilliseconds","method","roundingMethod","trunc","startOfDay","getDayOfYear","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","startOfYear","startOfWeek","locale","getDay","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","SIDEBAR","MAIN","NEWTASKBUTTON","addProjectToPage","projectDeadline","dateobj","deadline","localizeOptions","assign","seconds","offsetInSeconds","months","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","mainDiv","projectDiv","cloneNode","innerText","description","taskObj","tasks","taskDiv","addTaskToProject","classList","toggle","addProjectToMain","sidebarDiv","projectName","addProjectToSidebar","textContent","checkbox","complete","checked","removeProjectFromPage","getParentProjectName","taskElement","node","className","toggleRemoveDefaults","setInputMinDate","inputDate","todayDate","min","addTask","task","set","removeTask","taskName","delete","toggleComplete","nextDay","delta","amount","NaN","addDays","ENDOFTODAY","NEXTMONDAY","nextMonday","tasks1","tasks2","taskMap1","forEach","taskMap2","DIALOG","FORM","removeProject","removeProjectFromArray","removeItem","removeProjectFromStorage","getTaskObjByElement","getProjectByName","projectNameArray","getItem","getProjectInfo","getProjects","defaultProjects","loadProjectstoArray","addEventListener","event","showModal","removeTaskFromProject","newTaskInput","before","addNewTaskInput","preventDefault","toggleTaskComplete","dateString","timeString","dateObj","hour","split","getDateObj","querySelectorAll","sort","project1","project2","sortAscDate","updateProjects","newProject","reset","close","newTask","previousElementSibling"],"sourceRoot":""}